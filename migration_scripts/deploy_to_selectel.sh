#!/bin/bash

# –°–∫—Ä–∏–ø—Ç —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –Ω–∞ Selectel —Å–µ—Ä–≤–µ—Ä
# –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ: ssh root@31.41.155.88

set -e

echo "üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –Ω–∞ Selectel..."

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
SELECTEL_SERVER="31.41.155.88"
APP_DIR="/opt/pax-backend"
BACKUP_DIR="./backups"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –±—ç–∫–∞–ø–æ–≤
if [ ! -d "$BACKUP_DIR" ]; then
    echo "‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —Å –±—ç–∫–∞–ø–∞–º–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: $BACKUP_DIR"
    echo "–°–Ω–∞—á–∞–ª–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ: ./migration_scripts/backup_render_data.sh"
    exit 1
fi

# –ù–∞—Ö–æ–¥–∏–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –±—ç–∫–∞–ø
LATEST_BACKUP=$(ls -t "$BACKUP_DIR" | head -1)
if [ -z "$LATEST_BACKUP" ]; then
    echo "‚ùå –ë—ç–∫–∞–ø—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ $BACKUP_DIR"
    exit 1
fi

BACKUP_PATH="$BACKUP_DIR/$LATEST_BACKUP"
echo "üìÅ –ò—Å–ø–æ–ª—å–∑—É–µ–º –±—ç–∫–∞–ø: $BACKUP_PATH"

# 1. –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
echo "üì§ –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –Ω–∞ —Å–µ—Ä–≤–µ—Ä..."
scp -r "$BACKUP_PATH" root@$SELECTEL_SERVER:/tmp/

# 2. –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä—É –∏ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ
ssh root@$SELECTEL_SERVER << 'EOF'

set -e

echo "üîß –ù–∞—á–∏–Ω–∞–µ–º —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ..."

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
APP_DIR="/opt/pax-backend"
BACKUP_PATH="/tmp/$(ls -t /tmp | grep backup | head -1)"

if [ ! -d "$BACKUP_PATH" ]; then
    echo "‚ùå –ë—ç–∫–∞–ø –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ /tmp"
    exit 1
fi

echo "üìÅ –ò—Å–ø–æ–ª—å–∑—É–µ–º –±—ç–∫–∞–ø: $BACKUP_PATH"

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
cd $APP_DIR
if [ -f "docker-compose.yml" ]; then
    docker-compose down || true
fi

# –û—á–∏—Å—Ç–∫–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
echo "üßπ –û—á–∏—Å—Ç–∫–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
rm -rf $APP_DIR/*
mkdir -p $APP_DIR/uploads
mkdir -p $APP_DIR/ssl
mkdir -p $APP_DIR/logs

# –†–∞—Å–ø–∞–∫–æ–≤–∫–∞ –∫–æ–¥–∞
echo "üì¶ –†–∞—Å–ø–∞–∫–æ–≤–∫–∞ –∫–æ–¥–∞..."
tar -xzf "$BACKUP_PATH/code_backup.tar.gz" -C $APP_DIR --strip-components=1

# –†–∞—Å–ø–∞–∫–æ–≤–∫–∞ uploads (–µ—Å–ª–∏ –µ—Å—Ç—å)
if [ -f "$BACKUP_PATH/uploads_backup.tar.gz" ]; then
    echo "üìÅ –†–∞—Å–ø–∞–∫–æ–≤–∫–∞ uploads..."
    tar -xzf "$BACKUP_PATH/uploads_backup.tar.gz" -C $APP_DIR --strip-components=2
fi

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞
echo "üîê –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞..."
chown -R root:root $APP_DIR
chmod -R 755 $APP_DIR
chmod -R 777 $APP_DIR/uploads
chmod -R 755 $APP_DIR/ssl

# –°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞
echo "‚öôÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞..."
cat > $APP_DIR/.env << 'ENVEOF'
# –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö
DATABASE_URL=postgresql://paxmain_user:IUwzoIuzbKG9RuruiHSxBFTllTwaK4DN@dpg-d1lu8jnfte5s73dv6780-a/paxmain

# Telegram Bot
TELEGRAM_BOT_TOKEN=8187393599:AAEudOluahmhNJixt_hW8mvWjWC0eh1YIlA
TELEGRAM_BOT_USERNAME=paxdemobot

# –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å
SECRET_KEY=8f3b2c1e-4a5d-11ee-be56-0242ac120002
ALGORITHM=HS256
ACCESS_TOKEN_EXPIRE_MINUTES=30

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
DEBUG=false
ENVIRONMENT=production
LOG_LEVEL=INFO

# –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–æ–≤
UPLOAD_DIR=uploads
MAX_FILE_SIZE=10485760
ALLOWED_FILE_TYPES=image/jpeg,image/png,image/gif

# CORS
CORS_ORIGINS=https://web.telegram.org,https://t.me,https://frabjous-florentine-c506b0.netlify.app,https://31.41.155.88

# Redis
REDIS_URL=redis://localhost:6379
ENVEOF

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ docker-compose.yml –¥–ª—è Selectel
echo "üê≥ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ docker-compose.yml..."
cat > $APP_DIR/docker-compose.yml << 'COMPOSEEOF'
services:
  # –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö PostgreSQL
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: ridesharing
      POSTGRES_USER: rideshare_user
      POSTGRES_PASSWORD: rideshare_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U rideshare_user -d ridesharing"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis –¥–ª—è –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend FastAPI
  backend:
    build: .
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://paxmain_user:IUwzoIuzbKG9RuruiHSxBFTllTwaK4DN@dpg-d1lu8jnfte5s73dv6780-a/paxmain
      - REDIS_URL=redis://redis:6379
      - TELEGRAM_BOT_TOKEN=8187393599:AAEudOluahmhNJixt_hW8mvWjWC0eh1YIlA
      - SECRET_KEY=8f3b2c1e-4a5d-11ee-be56-0242ac120002
      - DEBUG=false
      - ENVIRONMENT=production
    volumes:
      - ./app:/app/app
      - ./uploads:/app/uploads
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

  # Nginx –¥–ª—è –ø—Ä–æ–∫—Å–∏—Ä–æ–≤–∞–Ω–∏—è –∏ —Å—Ç–∞—Ç–∏–∫–∏
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./uploads:/usr/share/nginx/html/uploads
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - backend
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
COMPOSEEOF

# –°–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
echo "üî® –°–±–æ—Ä–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
cd $APP_DIR
docker-compose build

echo "üöÄ –ó–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
docker-compose up -d

# –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
sleep 30

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
docker-compose ps

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è API
echo "üè• –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è API..."
for i in {1..10}; do
    if curl -f http://localhost:8000/health > /dev/null 2>&1; then
        echo "‚úÖ API –¥–æ—Å—Ç—É–ø–µ–Ω"
        break
    else
        echo "‚è≥ –ü–æ–ø—ã—Ç–∫–∞ $i/10..."
        sleep 10
    fi
done

# –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
if [ -f "$BACKUP_PATH/database_backup.sql" ]; then
    echo "üóÑÔ∏è –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
    # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –ë–î
    echo "‚ö†Ô∏è –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ë–î —Ç—Ä–µ–±—É–µ—Ç —Ä—É—á–Ω–æ–≥–æ –≤–º–µ—à–∞—Ç–µ–ª—å—Å—Ç–≤–∞"
fi

# –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
echo "üßπ –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤..."
rm -rf /tmp/*backup*

echo "‚úÖ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
echo "üìä –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤:"
docker-compose ps

echo "üåê API –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://31.41.155.88:8000"
echo "üìã –õ–æ–≥–∏: docker-compose logs -f"

EOF

echo "‚úÖ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –Ω–∞ Selectel –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
echo "üîó –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å: http://31.41.155.88:8000/health" 