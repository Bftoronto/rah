#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –º–∏–≥—Ä–∞—Ü–∏–∏ –Ω–∞ Selectel
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./deploy_to_selectel.sh <server_ip> <domain> [ssh_key_path]

set -e

if [ $# -lt 2 ]; then
    echo "‚ùå –û—à–∏–±–∫–∞: –£–∫–∞–∂–∏—Ç–µ IP —Å–µ—Ä–≤–µ—Ä–∞ –∏ –¥–æ–º–µ–Ω"
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./deploy_to_selectel.sh <server_ip> <domain> [ssh_key_path]"
    echo "–ü—Ä–∏–º–µ—Ä: ./deploy_to_selectel.sh 192.168.1.100 myapp.com ~/.ssh/id_rsa"
    exit 1
fi

SERVER_IP=$1
DOMAIN=$2
SSH_KEY=${3:-"~/.ssh/id_rsa"}
SSH_USER="root"

echo "üöÄ –ú–∏–≥—Ä–∞—Ü–∏—è –Ω–∞ Selectel"
echo "========================"
echo "–°–µ—Ä–≤–µ—Ä: $SERVER_IP"
echo "–î–æ–º–µ–Ω: $DOMAIN"
echo "SSH –∫–ª—é—á: $SSH_KEY"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É..."
if ! ssh -i "$SSH_KEY" -o ConnectTimeout=10 -o BatchMode=yes "$SSH_USER@$SERVER_IP" exit 2>/dev/null; then
    echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É"
    exit 1
fi

echo "‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä—É —É—Å–ø–µ—à–Ω–æ"

# –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞
ssh -i "$SSH_KEY" "$SSH_USER@$SERVER_IP" << 'EOF'
set -e

echo "üîß –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã..."
apt update && apt upgrade -y

echo "üîß –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–∞–∫–µ—Ç–æ–≤..."
apt install -y nginx postgresql postgresql-contrib redis-server python3 python3-pip python3-venv git curl certbot python3-certbot-nginx

echo "üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ PostgreSQL..."
sudo -u postgres psql -c "CREATE DATABASE paxapp;"
sudo -u postgres psql -c "CREATE USER paxuser WITH PASSWORD 'paxpassword123';"
sudo -u postgres psql -c "GRANT ALL PRIVILEGES ON DATABASE paxapp TO paxuser;"

echo "üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Redis..."
systemctl enable redis-server
systemctl start redis-server

echo "üîß –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
useradd -m -s /bin/bash paxapp
usermod -aG sudo paxapp

echo "üîß –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π..."
mkdir -p /opt/pax-app
mkdir -p /opt/pax-app/backend
mkdir -p /opt/pax-app/frontend
mkdir -p /opt/pax-app/logs
mkdir -p /opt/pax-app/uploads

echo "üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞..."
chown -R paxapp:paxapp /opt/pax-app
chmod -R 755 /opt/pax-app
EOF

# –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
echo "üìÅ –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."

# –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ backend
scp -i "$SSH_KEY" -r backend/* "$SSH_USER@$SERVER_IP:/opt/pax-app/backend/"

# –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ frontend
scp -i "$SSH_KEY" index.html "$SSH_USER@$SERVER_IP:/opt/pax-app/frontend/"
scp -i "$SSH_KEY" -r assets "$SSH_USER@$SERVER_IP:/opt/pax-app/frontend/"

# –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
scp -i "$SSH_KEY" nginx.conf "$SSH_USER@$SERVER_IP:/opt/pax-app/"
scp -i "$SSH_KEY" docker-compose.yml "$SSH_USER@$SERVER_IP:/opt/pax-app/"

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
ssh -i "$SSH_KEY" "$SSH_USER@$SERVER_IP" << EOF
set -e

echo "üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Python –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
cd /opt/pax-app/backend
python3 -m venv venv
source venv/bin/activate
pip install --upgrade pip
pip install -r requirements.txt

echo "üîß –°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞..."
cat > /opt/pax-app/backend/.env << 'ENVEOF'
DATABASE_URL=postgresql://paxuser:paxpassword123@localhost/paxapp
TELEGRAM_BOT_TOKEN=8187393599:AAEudOluahmhNJixt_hW8mvWjWC0eh1YIlA
TELEGRAM_BOT_USERNAME=paxdemobot
SECRET_KEY=$(openssl rand -hex 32)
DEBUG=false
ENVIRONMENT=production
LOG_LEVEL=INFO
CORS_ORIGINS=https://$DOMAIN,https://www.$DOMAIN,https://web.telegram.org
UPLOAD_DIR=uploads
MAX_FILE_SIZE=10485760
ACCESS_TOKEN_EXPIRE_MINUTES=30
REDIS_URL=redis://localhost:6379
ENVEOF

echo "üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ systemd —Å–µ—Ä–≤–∏—Å–∞..."
cat > /etc/systemd/system/pax-backend.service << 'SERVICEEOF'
[Unit]
Description=PAX Backend Service
After=network.target postgresql.service redis-server.service

[Service]
Type=simple
User=paxapp
Group=paxapp
WorkingDirectory=/opt/pax-app/backend
Environment=PATH=/opt/pax-app/backend/venv/bin
ExecStart=/opt/pax-app/backend/venv/bin/uvicorn app.main:app --host 0.0.0.0 --port 8000
Restart=always
RestartSec=10

[Install]
WantedBy=multi-user.target
SERVICEEOF

echo "üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Nginx..."
cat > /etc/nginx/sites-available/pax-app << 'NGINXEOF'
server {
    listen 80;
    server_name $DOMAIN www.$DOMAIN;
    
    # Frontend
    location / {
        root /opt/pax-app/frontend;
        index index.html;
        try_files \$uri \$uri/ /index.html;
        
        # –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤
        location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
    }
    
    # Backend API
    location /api/ {
        proxy_pass http://127.0.0.1:8000;
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto \$scheme;
        
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }
    
    # Health check
    location /health {
        proxy_pass http://127.0.0.1:8000;
        access_log off;
    }
    
    # –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
}
NGINXEOF

echo "üîß –ê–∫—Ç–∏–≤–∞—Ü–∏—è Nginx –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
ln -sf /etc/nginx/sites-available/pax-app /etc/nginx/sites-enabled/
rm -f /etc/nginx/sites-enabled/default
nginx -t

echo "üîß –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤..."
systemctl daemon-reload
systemctl enable pax-backend
systemctl start pax-backend
systemctl restart nginx

echo "üîí –ü–æ–ª—É—á–µ–Ω–∏–µ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞..."
certbot --nginx -d $DOMAIN -d www.$DOMAIN --non-interactive --agree-tos --email admin@$DOMAIN

echo "üîß –§–∏–Ω–∞–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞..."
systemctl restart pax-backend
systemctl restart nginx

echo "üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
systemctl status pax-backend --no-pager
systemctl status nginx --no-pager
systemctl status postgresql --no-pager
systemctl status redis-server --no-pager
EOF

echo "‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!"
echo ""
echo "üìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
echo "1. –û–±–Ω–æ–≤–∏—Ç–µ DNS –∑–∞–ø–∏—Å–∏ –¥–ª—è –¥–æ–º–µ–Ω–∞ $DOMAIN"
echo "2. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ Telegram –±–æ—Ç–∞ —Å –Ω–æ–≤—ã–º URL: https://$DOMAIN"
echo "3. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: https://$DOMAIN"
echo "4. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ"
echo ""
echo "üîó –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
echo "  - –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤: ssh $SSH_USER@$SERVER_IP 'journalctl -u pax-backend -f'"
echo "  - –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–∞: ssh $SSH_USER@$SERVER_IP 'systemctl restart pax-backend'"
echo "  - –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞: ssh $SSH_USER@$SERVER_IP 'systemctl status pax-backend'" 