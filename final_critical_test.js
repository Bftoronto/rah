#!/usr/bin/env node

/**
 * üö® –§–ò–ù–ê–õ–¨–ù–´–ô –¢–ï–°–¢ –ö–†–ò–¢–ò–ß–ï–°–ö–ò–• –ò–°–ü–†–ê–í–õ–ï–ù–ò–ô
 * –ü–æ–ª–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è –æ—à–∏–±–∫–∏ "Importing binding name 'default' cannot be resolved"
 */

console.log('üö® –§–ò–ù–ê–õ–¨–ù–´–ô –¢–ï–°–¢ –ö–†–ò–¢–ò–ß–ï–°–ö–ò–• –ò–°–ü–†–ê–í–õ–ï–ù–ò–ô');
console.log('==========================================');

const fs = require('fs');
const path = require('path');

// –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
const criticalFiles = [
    {
        path: 'frontend/assets/js/router.js',
        description: 'Router - –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º',
        checks: [
            { type: 'not_contains', pattern: 'import screens,', message: '–£–±—Ä–∞–Ω –ø—Ä–æ–±–ª–µ–º–Ω—ã–π –∏–º–ø–æ—Ä—Ç screens' },
            { type: 'contains', pattern: 'import { getAllScreens }', message: '–î–æ–±–∞–≤–ª–µ–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –∏–º–ø–æ—Ä—Ç' }
        ]
    },
    {
        path: 'frontend/assets/js/screens/index.js',
        description: 'Screens/index.js - —ç–∫—Å–ø–æ—Ä—Ç—ã —ç–∫—Ä–∞–Ω–æ–≤',
        checks: [
            { type: 'not_contains', pattern: 'export { screens as default }', message: '–£–±—Ä–∞–Ω –ø—Ä–æ–±–ª–µ–º–Ω—ã–π —ç–∫—Å–ø–æ—Ä—Ç' },
            { type: 'contains', pattern: 'export { screens }', message: '–î–æ–±–∞–≤–ª–µ–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —ç–∫—Å–ø–æ—Ä—Ç' }
        ]
    },
    {
        path: 'frontend/test_imports.html',
        description: 'Test imports - —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª',
        checks: [
            { type: 'not_contains', pattern: 'import screens from', message: '–£–±—Ä–∞–Ω –ø—Ä–æ–±–ª–µ–º–Ω—ã–π –∏–º–ø–æ—Ä—Ç –≤ —Ç–µ—Å—Ç–µ' },
            { type: 'contains', pattern: 'import { screens }', message: '–î–æ–±–∞–≤–ª–µ–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –∏–º–ø–æ—Ä—Ç –≤ —Ç–µ—Å—Ç–µ' }
        ]
    },
    {
        path: 'frontend/test_imports_fixed.html',
        description: 'Test imports fixed - –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π —Ç–µ—Å—Ç',
        checks: [
            { type: 'not_contains', pattern: 'screensModule.default', message: '–£–±—Ä–∞–Ω –ø—Ä–æ–±–ª–µ–º–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ default' },
            { type: 'contains', pattern: 'const { screens }', message: '–î–æ–±–∞–≤–ª–µ–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –∏–º–ø–æ—Ä—Ç' }
        ]
    },
    {
        path: 'frontend/assets/js/screens/registration.js',
        description: 'Registration screens - —ç–∫—Ä–∞–Ω—ã —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏',
        checks: [
            { type: 'contains', pattern: 'export { RegistrationScreens }', message: '–ò–º–µ–Ω–æ–≤–∞–Ω–Ω—ã–π —ç–∫—Å–ø–æ—Ä—Ç –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç' },
            { type: 'contains', pattern: 'export default RegistrationScreens', message: 'Default —ç–∫—Å–ø–æ—Ä—Ç –¥–æ–±–∞–≤–ª–µ–Ω' }
        ]
    }
];

let allTestsPassed = true;

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ–∞–π–ª–∞
function checkFile(fileConfig) {
    console.log(`\nüìÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ ${fileConfig.description}:`);
    console.log(`   –§–∞–π–ª: ${fileConfig.path}`);
    
    try {
        const content = fs.readFileSync(fileConfig.path, 'utf8');
        let filePassed = true;
        
        fileConfig.checks.forEach(check => {
            const found = content.includes(check.pattern);
            
            if (check.type === 'contains' && found) {
                console.log(`   ‚úÖ ${check.message}`);
            } else if (check.type === 'not_contains' && !found) {
                console.log(`   ‚úÖ ${check.message}`);
            } else if (check.type === 'contains' && !found) {
                console.log(`   ‚ùå –ù–ï –ù–ê–ô–î–ï–ù–û: ${check.message}`);
                filePassed = false;
            } else if (check.type === 'not_contains' && found) {
                console.log(`   ‚ùå –ù–ê–ô–î–ï–ù–û: ${check.message}`);
                filePassed = false;
            }
        });
        
        if (filePassed) {
            console.log('   ‚úÖ –§–∞–π–ª –ø–æ–ª–Ω–æ—Å—Ç—å—é –∏—Å–ø—Ä–∞–≤–ª–µ–Ω');
        } else {
            console.log('   ‚ùå –§–∞–π–ª —Ç—Ä–µ–±—É–µ—Ç –¥–æ—Ä–∞–±–æ—Ç–∫–∏');
            allTestsPassed = false;
        }
        
        return filePassed;
        
    } catch (error) {
        console.log(`   ‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞: ${error.message}`);
        allTestsPassed = false;
        return false;
    }
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã
console.log('\nüîç –ü–†–û–í–ï–†–ö–ê –ö–†–ò–¢–ò–ß–ï–°–ö–ò–• –§–ê–ô–õ–û–í:');
criticalFiles.forEach(checkFile);

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ JavaScript
console.log('\nüîç –ü–†–û–í–ï–†–ö–ê –°–ò–ù–¢–ê–ö–°–ò–°–ê:');
const jsFiles = criticalFiles
    .filter(f => f.path.endsWith('.js'))
    .map(f => f.path);

jsFiles.forEach(file => {
    try {
        const { execSync } = require('child_process');
        execSync(`node -c "${file}"`, { stdio: 'pipe' });
        console.log(`   ‚úÖ ${file} - —Å–∏–Ω—Ç–∞–∫—Å–∏—Å –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω`);
    } catch (error) {
        console.log(`   ‚ùå ${file} - —Å–∏–Ω—Ç–∞–∫—Å–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞`);
        allTestsPassed = false;
    }
});

// –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã
console.log('\nüéØ –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –ü–†–û–í–ï–†–ö–ò:');

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –¥—Ä—É–≥–∏—Ö –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤
const additionalPatterns = [
    'export { * as default }',
    'import * as screens from',
    'export * from.*index',
    'export { .* as default }.*from'
];

let hasAdditionalIssues = false;

criticalFiles.forEach(file => {
    try {
        const content = fs.readFileSync(file.path, 'utf8');
        
        additionalPatterns.forEach(pattern => {
            const regex = new RegExp(pattern, 'g');
            const matches = content.match(regex);
            
            if (matches) {
                console.log(`   ‚ö†Ô∏è  ${file.path}: –ù–∞–π–¥–µ–Ω –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–æ –ø—Ä–æ–±–ª–µ–º–Ω—ã–π –ø–∞—Ç—Ç–µ—Ä–Ω: ${pattern}`);
                hasAdditionalIssues = true;
            }
        });
    } catch (error) {
        // –§–∞–π–ª —É–∂–µ –ø—Ä–æ–≤–µ—Ä–µ–Ω –≤—ã—à–µ
    }
});

if (!hasAdditionalIssues) {
    console.log('   ‚úÖ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
}

// –ò—Ç–æ–≥–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
console.log('\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢ –§–ò–ù–ê–õ–¨–ù–û–ì–û –¢–ï–°–¢–ê:');
console.log('===============================');

if (allTestsPassed && !hasAdditionalIssues) {
    console.log('‚úÖ –í–°–ï –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø –ü–†–ò–ú–ï–ù–ï–ù–´');
    console.log('üéâ –û–®–ò–ë–ö–ê "Importing binding name \'default\' cannot be resolved" –£–°–¢–†–ê–ù–ï–ù–ê');
    console.log('');
    console.log('üöÄ –ü–õ–ê–ù –ù–ï–ú–ï–î–õ–ï–ù–ù–´–• –î–ï–ô–°–¢–í–ò–ô:');
    console.log('1. ‚úÖ –í—Å–µ —Ñ–∞–π–ª—ã –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã');
    console.log('2. üîÑ –ù–µ–º–µ–¥–ª–µ–Ω–Ω–æ deploy –Ω–∞ Netlify');
    console.log('3. üìä –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ª–æ–≥–∏ backend —á–µ—Ä–µ–∑ 5 –º–∏–Ω—É—Ç');
    console.log('4. üåê –¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –≤ –±—Ä–∞—É–∑–µ—Ä–µ');
    console.log('5. üìà –ú–æ–Ω–∏—Ç–æ—Ä–∏—Ç—å —Å–∏—Å—Ç–µ–º—É –≤ —Ç–µ—á–µ–Ω–∏–µ 30 –º–∏–Ω—É—Ç');
    console.log('');
    console.log('üéØ –û–ñ–ò–î–ê–ï–ú–´–ô –†–ï–ó–£–õ–¨–¢–ê–¢:');
    console.log('- –ü–æ–ª–Ω–æ–µ –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏–µ –æ—à–∏–±–∫–∏ –∏–º–ø–æ—Ä—Ç–∞ –∏–∑ –ª–æ–≥–æ–≤');
    console.log('- –°—Ç–∞–±–∏–ª—å–Ω–∞—è —Ä–∞–±–æ—Ç–∞ –≤—Å–µ—Ö —ç–∫—Ä–∞–Ω–æ–≤');
    console.log('- –ö–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è –º–µ–∂–¥—É —ç–∫—Ä–∞–Ω–∞–º–∏');
    console.log('- –û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ JS –æ—à–∏–±–æ–∫ –≤ –∫–æ–Ω—Å–æ–ª–∏ –±—Ä–∞—É–∑–µ—Ä–∞');
    console.log('');
    console.log('üì± –ö–û–ú–ê–ù–î–ê –î–õ–Ø –†–ê–ó–í–ï–†–¢–´–í–ê–ù–ò–Ø:');
    console.log('git add .');
    console.log('git commit -m "CRITICAL FIX: Resolve star export binding issue"');
    console.log('git push origin main');
} else {
    console.log('‚ùå –û–ë–ù–ê–†–£–ñ–ï–ù–´ –ù–ï–†–ï–®–ï–ù–ù–´–ï –ü–†–û–ë–õ–ï–ú–´');
    console.log('üîß –°–ò–°–¢–ï–ú–ê –ú–û–ñ–ï–¢ –û–°–¢–ê–í–ê–¢–¨–°–Ø –ù–ï–°–¢–ê–ë–ò–õ–¨–ù–û–ô');
    console.log('');
    console.log('‚ö†Ô∏è  –ö–†–ò–¢–ò–ß–ï–°–ö–û–ï –í–ù–ò–ú–ê–ù–ò–ï:');
    console.log('–¢—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ');
    console.log('–ù–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –¥–æ –ø–æ–ª–Ω–æ–≥–æ —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º');
}

console.log('\nüí° –¢–ï–•–ù–ò–ß–ï–°–ö–û–ï –†–ï–ó–Æ–ú–ï:');
console.log('–ü—Ä–æ–±–ª–µ–º–∞ –∑–∞–∫–ª—é—á–∞–ª–∞—Å—å –≤ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–µ –º–µ–∂–¥—É:');
console.log('- export { screens as default } - –≤ screens/index.js');
console.log('- import screens, { getAllScreens } - –≤ router.js');
console.log('- star exports –∏ named exports –≤ –æ–¥–Ω–æ–º –º–æ–¥—É–ª–µ');
console.log('');
console.log('–†–µ—à–µ–Ω–∏–µ:');
console.log('- –£–±—Ä–∞–ª–∏ default export –∏–∑ screens/index.js');
console.log('- –ò–∑–º–µ–Ω–∏–ª–∏ –∏–º–ø–æ—Ä—Ç –≤ router.js –Ω–∞ named import');
console.log('- –ò—Å–ø—Ä–∞–≤–∏–ª–∏ –≤—Å–µ —Ç–µ—Å—Ç–æ–≤—ã–µ —Ñ–∞–π–ª—ã');
console.log('');
console.log('‚è∞ –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ç–µ—Å—Ç–∞:', new Date().toLocaleTimeString());
console.log('üîß –°–æ–∑–¥–∞–Ω–æ —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º–æ–π –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è');
