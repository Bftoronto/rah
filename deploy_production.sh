#!/bin/bash

# –°–∫—Ä–∏–ø—Ç —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –Ω–∞ –ø—Ä–æ–¥–∞–∫—à–µ–Ω —Å–µ—Ä–≤–µ—Ä
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./deploy_production.sh

set -e  # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏ –æ—à–∏–±–∫–µ

echo "üöÄ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ PAX –Ω–∞ –ø—Ä–æ–¥–∞–∫—à–µ–Ω —Å–µ—Ä–≤–µ—Ä"
echo "=========================================="

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
if [ $# -eq 0 ]; then
    echo "‚ùå –û—à–∏–±–∫–∞: –£–∫–∞–∂–∏—Ç–µ IP –∞–¥—Ä–µ—Å —Å–µ—Ä–≤–µ—Ä–∞"
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./deploy_production.sh <server_ip> [ssh_key_path]"
    echo "–ü—Ä–∏–º–µ—Ä: ./deploy_production.sh 192.168.1.100 ~/.ssh/id_rsa"
    exit 1
fi

SERVER_IP=$1
SSH_KEY=${2:-"~/.ssh/id_rsa"}
SSH_USER="root"

echo "üìã –ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è:"
echo "   –°–µ—Ä–≤–µ—Ä: $SERVER_IP"
echo "   SSH –∫–ª—é—á: $SSH_KEY"
echo "   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: $SSH_USER"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É..."
if ! ssh -i "$SSH_KEY" -o ConnectTimeout=10 -o BatchMode=yes "$SSH_USER@$SERVER_IP" exit 2>/dev/null; then
    echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É"
    echo "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ:"
    echo "  - IP –∞–¥—Ä–µ—Å —Å–µ—Ä–≤–µ—Ä–∞"
    echo "  - SSH –∫–ª—é—á"
    echo "  - –î–æ—Å—Ç—É–ø –∫ —Å–µ—Ä–≤–µ—Ä—É"
    exit 1
fi

echo "‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä—É —É—Å–ø–µ—à–Ω–æ"

# –°–æ–∑–¥–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –∞—Ä—Ö–∏–≤–∞
echo "üì¶ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Ñ–∞–π–ª–æ–≤ –¥–ª—è —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è..."
TEMP_ARCHIVE="pax_deploy_$(date +%Y%m%d_%H%M%S).tar.gz"

# –ò—Å–∫–ª—é—á–∞–µ–º –Ω–µ–Ω—É–∂–Ω—ã–µ —Ñ–∞–π–ª—ã
tar --exclude='.git' \
    --exclude='venv' \
    --exclude='__pycache__' \
    --exclude='*.pyc' \
    --exclude='.DS_Store' \
    --exclude='backups' \
    --exclude='uploads' \
    --exclude='logs' \
    --exclude='*.log' \
    --exclude='test_*.html' \
    --exclude='diagnose_*.py' \
    --exclude='check_*.py' \
    --exclude='fix_*.py' \
    --exclude='emergency_*.py' \
    --exclude='final_*.py' \
    -czf "$TEMP_ARCHIVE" .

echo "üì§ –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–æ–≤ –Ω–∞ —Å–µ—Ä–≤–µ—Ä..."
scp -i "$SSH_KEY" "$TEMP_ARCHIVE" "$SSH_USER@$SERVER_IP:/tmp/"

# –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –∞—Ä—Ö–∏–≤–∞
rm "$TEMP_ARCHIVE"

echo "üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞..."
ssh -i "$SSH_KEY" "$SSH_USER@$SERVER_IP" << 'EOF'
set -e

echo "üìã –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã..."
apt update && apt upgrade -y

echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–∞–∫–µ—Ç–æ–≤..."
apt install -y python3 python3-pip python3-venv nginx postgresql postgresql-contrib redis-server certbot python3-certbot-nginx

echo "üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ PostgreSQL..."
systemctl start postgresql
systemctl enable postgresql

# –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
sudo -u postgres psql << 'PSQL'
CREATE USER pax_user WITH PASSWORD 'pax_secure_password_2024';
CREATE DATABASE pax_db OWNER pax_user;
GRANT ALL PRIVILEGES ON DATABASE pax_db TO pax_user;
\q
PSQL

echo "üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Redis..."
systemctl start redis-server
systemctl enable redis-server

echo "üìÅ –†–∞—Å–ø–∞–∫–æ–≤–∫–∞ —Ñ–∞–π–ª–æ–≤..."
cd /opt
tar -xzf /tmp/pax_deploy_*.tar.gz -C /opt/
mv pax-* pax-app
cd pax-app

echo "üêç –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Python –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
cd backend
python3 -m venv venv
source venv/bin/activate
pip install --upgrade pip
pip install -r requirements.txt
pip install pydantic-settings==2.1.0

echo "üîß –°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞..."
cat > .env << 'ENV'
# –û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
ENVIRONMENT=production
DEBUG=false
APP_NAME=Pax Backend
APP_VERSION=1.0.0

# –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö
DATABASE_URL=postgresql://pax_user:pax_secure_password_2024@localhost:5432/pax_db

# –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å
SECRET_KEY=your-super-secret-production-key-change-this-immediately
ALGORITHM=HS256
ACCESS_TOKEN_EXPIRE_MINUTES=30

# Telegram (–ó–ê–ú–ï–ù–ò–¢–ï –ù–ê –í–ê–®–ò –î–ê–ù–ù–´–ï)
TELEGRAM_BOT_TOKEN=your-telegram-bot-token-here

# CORS
CORS_ORIGINS=https://your-domain.com,https://web.telegram.org

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
LOG_LEVEL=INFO
LOG_FILE=logs/app.log

# –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
ENABLE_METRICS=true
METRICS_PORT=8001

# Redis
REDIS_URL=redis://localhost:6379

# –§–∞–π–ª—ã
UPLOAD_DIR=uploads
MAX_FILE_SIZE=10485760

# –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
NOTIFICATION_QUEUE_SIZE=1000

# –ú–æ–¥–µ—Ä–∞—Ü–∏—è
AUTO_MODERATION=true
MODERATION_THRESHOLD=0.7
ENV

echo "üìÅ –°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π..."
mkdir -p logs uploads
chmod 755 logs uploads

echo "üîß –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π..."
source venv/bin/activate
alembic upgrade head

echo "üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ systemd —Å–µ—Ä–≤–∏—Å–∞..."
cat > /etc/systemd/system/pax-backend.service << 'SERVICE'
[Unit]
Description=Pax Backend API
After=network.target postgresql.service redis-server.service

[Service]
Type=simple
User=root
WorkingDirectory=/opt/pax-app/backend
Environment=PATH=/opt/pax-app/backend/venv/bin
ExecStart=/opt/pax-app/backend/venv/bin/python -m uvicorn app.main:app --host 0.0.0.0 --port 8000
Restart=always
RestartSec=10

[Install]
WantedBy=multi-user.target
SERVICE

echo "üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Nginx..."
cat > /etc/nginx/sites-available/pax-app << 'NGINX'
server {
    listen 80;
    server_name _;
    
    # Frontend
    location / {
        root /opt/pax-app;
        index index.html;
        try_files $uri $uri/ /index.html;
        
        # –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤
        location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
    }
    
    # Backend API
    location /api/ {
        proxy_pass http://127.0.0.1:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }
    
    # Health check
    location /health {
        proxy_pass http://127.0.0.1:8000;
        access_log off;
    }
    
    # Metrics (—Ç–æ–ª—å–∫–æ –¥–ª—è localhost)
    location /metrics {
        allow 127.0.0.1;
        deny all;
        proxy_pass http://127.0.0.1:8000;
    }
    
    # –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
}
NGINX

# –ê–∫—Ç–∏–≤–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Nginx
ln -sf /etc/nginx/sites-available/pax-app /etc/nginx/sites-enabled/
rm -f /etc/nginx/sites-enabled/default
nginx -t
systemctl restart nginx

echo "üîß –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤..."
systemctl daemon-reload
systemctl enable pax-backend
systemctl start pax-backend

echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
sleep 10

echo "üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
systemctl status pax-backend --no-pager
systemctl status nginx --no-pager
systemctl status postgresql --no-pager
systemctl status redis-server --no-pager

echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ API..."
curl -f http://localhost:8000/health || echo "‚ùå API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"

echo "üßπ –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤..."
rm -f /tmp/pax_deploy_*.tar.gz

EOF

echo ""
echo "üéâ –†–ê–ó–í–ï–†–¢–´–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û!"
echo "============================="
echo ""
echo "üì± Frontend: http://$SERVER_IP"
echo "üîß Backend API: http://$SERVER_IP/api"
echo "üìö API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: http://$SERVER_IP/api/docs"
echo "üìä Health Check: http://$SERVER_IP/health"
echo ""
echo "‚ö†Ô∏è  –í–ê–ñ–ù–´–ï –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:"
echo "1. –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ /opt/pax-app/backend/.env —Ñ–∞–π–ª:"
echo "   - –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ SECRET_KEY"
echo "   - –î–æ–±–∞–≤—å—Ç–µ TELEGRAM_BOT_TOKEN"
echo "   - –ù–∞—Å—Ç—Ä–æ–π—Ç–µ CORS_ORIGINS"
echo ""
echo "2. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç:"
echo "   certbot --nginx -d your-domain.com"
echo ""
echo "3. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –¥–æ–º–µ–Ω –≤ DNS"
echo ""
echo "4. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–∏—Å—ã –ø–æ—Å–ª–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π:"
echo "   sudo systemctl restart pax-backend"
echo "   sudo systemctl restart nginx"
echo ""
echo "üîç –õ–æ–≥–∏ —Å–µ—Ä–≤–∏—Å–æ–≤:"
echo "   sudo journalctl -u pax-backend -f"
echo "   sudo tail -f /var/log/nginx/access.log"
echo ""
echo "‚úÖ –ì–æ—Ç–æ–≤–æ –∫ –ø—Ä–æ–¥–∞–∫—à–µ–Ω—É!" 