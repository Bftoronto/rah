# Python
__pycache__/
*.py[cod]
*$py.class
*.so
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# Virtual environments
venv/
env/
ENV/
env.bak/
venv.bak/
.venv/

# Environment variables
.env
.env.local
.env.development.local
.env.test.local
.env.production.local
.env.*

# IDE files
.vscode/
.idea/
*.swp
*.swo
*~
.project
.pydevproject
.settings/

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db
desktop.ini

# Logs
logs/
*.log
*.log.*
app.log
error.log
access.log

# Temporary files
tmp/
temp/
*.tmp
*.temp

# Build outputs
dist/
build/
*.tar.gz
*.zip

# SSL certificates
*.pem
*.key
*.crt
*.csr
*.srl

# SSH keys
*.pem
id_rsa
id_rsa.pub
*.ppk

# Database
*.sqlite3
*.db
*.sql

# Alembic
backend/migrations/versions/
migrations/__pycache__/

# Coverage
.coverage
htmlcov/
.pytest_cache/
.tox/
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/

# Node.js (if any frontend build tools)
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
.npm
.yarn-integrity

# Frontend build
/dist/
/build/
/public/

# Deployment files
deploy.sh
start-ngrok.sh
*.backup

# Local configuration
config.local.js
.env.local

# Telegram
telegram.log
*.session
*.session-journal

# Mini App
TELEGRAM_MINIAPP_SETUP.md

# Backup files
*.backup
*.bak
*.old

# System
Thumbs.db

# JetBrains
.idea/

# Misc
migrations/__pycache__/

# Telegram
telegram.log
*.session
*.session-journal

# Mini App
TELEGRAM_MINIAPP_SETUP.md

# Инструкции и временные файлы
*.md~
*.tmp
*.bak

# Логи
*.log
backend/app.log

# Локальные настройки
backend/.env
.env

# Uploads (keep structure but ignore content)
uploads/*
!uploads/.gitkeep

# Database dumps
*.sql
*.dump

# Redis dumps
dump.rdb

# Monitoring
prometheus_data/
grafana_data/

# Docker
.dockerignore
docker-compose.override.yml

# Local development
local_settings.py
local_config.py 