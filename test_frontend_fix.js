#!/usr/bin/env node

/**
 * –≠–∫—Å—Ç—Ä–µ–Ω–Ω—ã–π —Ç–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—à–∏–±–∫–∏ ES6 –º–æ–¥—É–ª–µ–π
 */

const fs = require('fs');
const path = require('path');

console.log('üîß –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ô –§–†–û–ù–¢–ï–ù–î–ê');
console.log('=====================================\n');

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
const filesToCheck = [
    'frontend/assets/js/screens/index.js',
    'frontend/assets/js/router.js',
    'frontend/assets/js/app.js'
];

let allTestsPassed = true;

filesToCheck.forEach(filePath => {
    console.log(`üìÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–∞: ${filePath}`);
    
    try {
        const content = fs.readFileSync(filePath, 'utf8');
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫
        const hasMultipleExports = (content.match(/export default/g) || []).length > 1;
        const hasRegistrationImport = content.includes('import { RegistrationScreens }');
        const hasDynamicImport = content.includes('await import(');
        const hasAsyncInit = content.includes('async init()');
        
        if (hasMultipleExports) {
            console.log('‚ùå –û–®–ò–ë–ö–ê: –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ export default');
            allTestsPassed = false;
        } else {
            console.log('‚úÖ –ù–µ—Ç –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö export default');
        }
        
        if (hasRegistrationImport) {
            console.log('‚ùå –û–®–ò–ë–ö–ê: –û–±–Ω–∞—Ä—É–∂–µ–Ω —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π –∏–º–ø–æ—Ä—Ç RegistrationScreens');
            allTestsPassed = false;
        } else {
            console.log('‚úÖ –ù–µ—Ç —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö –∏–º–ø–æ—Ä—Ç–æ–≤ RegistrationScreens');
        }
        
        if (hasDynamicImport) {
            console.log('‚úÖ –û–±–Ω–∞—Ä—É–∂–µ–Ω –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π –∏–º–ø–æ—Ä—Ç');
        } else {
            console.log('‚ö†Ô∏è  –ù–µ –Ω–∞–π–¥–µ–Ω –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π –∏–º–ø–æ—Ä—Ç');
        }
        
        if (hasAsyncInit) {
            console.log('‚úÖ –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è');
        } else {
            console.log('‚ö†Ô∏è  –ù–µ –Ω–∞–π–¥–µ–Ω–∞ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è');
        }
        
    } catch (error) {
        console.log(`‚ùå –û–®–ò–ë–ö–ê: –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ—á–∏—Ç–∞—Ç—å —Ñ–∞–π–ª ${filePath}: ${error.message}`);
        allTestsPassed = false;
    }
    
    console.log('');
});

// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∏–Ω—Ç–∞–∫—Å–∏—Å JavaScript
console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ JavaScript...');

try {
    const { execSync } = require('child_process');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ–∞–π–ª—ã –Ω–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏
    const jsFiles = [
        'frontend/assets/js/screens/index.js',
        'frontend/assets/js/router.js',
        'frontend/assets/js/app.js'
    ];
    
    jsFiles.forEach(file => {
        try {
            // –ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ —á–µ—Ä–µ–∑ node
            execSync(`node -c "${file}"`, { stdio: 'pipe' });
            console.log(`‚úÖ ${file} - —Å–∏–Ω—Ç–∞–∫—Å–∏—Å –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω`);
        } catch (error) {
            console.log(`‚ùå ${file} - —Å–∏–Ω—Ç–∞–∫—Å–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: ${error.message}`);
            allTestsPassed = false;
        }
    });
    
} catch (error) {
    console.log('‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–∏–Ω—Ç–∞–∫—Å–∏—Å JavaScript');
}

console.log('\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:');
console.log('============================');

if (allTestsPassed) {
    console.log('‚úÖ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´');
    console.log('üéâ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ');
    console.log('\nüöÄ –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:');
    console.log('1. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥ –Ω–∞ Netlify');
    console.log('2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞–±–æ—Ç—É –≤ –±—Ä–∞—É–∑–µ—Ä–µ');
    console.log('3. –ú–æ–Ω–∏—Ç–æ—Ä—å—Ç–µ –ª–æ–≥–∏ –Ω–∞ –ø—Ä–µ–¥–º–µ—Ç –Ω–æ–≤—ã—Ö –æ—à–∏–±–æ–∫');
} else {
    console.log('‚ùå –û–ë–ù–ê–†–£–ñ–ï–ù–´ –û–®–ò–ë–ö–ò');
    console.log('üîß –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ');
}

console.log('\nüìù –û–ñ–ò–î–ê–ï–ú–´–ï –†–ï–ó–£–õ–¨–¢–ê–¢–´:');
console.log('- –£—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ –æ—à–∏–±–∫–∏ "Importing binding name default cannot be resolved"');
console.log('- –ö–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ —ç–∫—Ä–∞–Ω–æ–≤ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏');
console.log('- –°—Ç–∞–±–∏–ª—å–Ω–∞—è —Ä–∞–±–æ—Ç–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è');

console.log('\n‚è∞ –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ç–µ—Å—Ç–∞:', new Date().toLocaleTimeString()); 